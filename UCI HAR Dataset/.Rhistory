install.packages("googleVis")
install.packages("C:/Users/Daniela/Downloads/ramnathv-rCharts-2c368c8.zip", repos = NULL)
install.packages("C:/Users/Daniela/Downloads/ramnathv-rCharts-2c368c8.zip", repos = NULL)
require(devtools)
install.packages("devtools")
require(devtools)
install_github('rCharts', 'ramnathv')
install_github("ropensci/plotly")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages(“RMySQL”, type = “source”)
install.packages(“RMySQL”, type = “source”)
? install.packages
install.packages('RMySQL', type = 'source')
library(RMySQL)
Sys.getenv('MYSQL_HOME')
Sys.getenv('R_LIBS')
install.packages('RMySQL', type = 'source')
install.packages('RMySQL', type = 'source')
envVariables = Sys.getenv()
envVariables["PATH"]
envVariables["PATH"]
envVariables["MYSQL_HOME"]
install.packages("RMySQL", type = "source")
envVariables["MYSQL_HOME"]
install.packages("RMySQL", type = "source")
data1 <- read.csv("data_g.csv", header=F, skip=5,nrows=230)
data1 <- read.csv("data_g.csv", header=T)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL,destfile="data_g.csv")
data1 <- read.csv("data_g.csv", header=T)
View(data1)
data1[data1$V1!=""]
data1[data1$V1!=" "]
data1[data1$V1!="USA"]
data1 <- read.csv("data_g.csv", header=F)
View(data1)
data1[data1$V1!=" "]
data1$V1
data1$V1[1]
data1$V1!=""
data1 <- data1[data1$V1!=""]
data1 <- data1[data1$V1!="",]
data1$V1!=""
View(data1)
fileURL2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL2,destfile="data_g2.csv")
data2 <- read.csv("data_g2.csv", header=F)
View(data2)
data2 <- read.csv("data_g2.csv", header=T)
View(data2)
merged = merge(data1,data2,by.x="V1",by.y="CountryCode",all=T)
View(merged)
? data frame
? data.frame
sum(merged$V2!="")
merged$V2
sum(merged$V2>0)
ranks <- merged$V2
ranks <- as.numeric(merged$V2)
ranks>0
sum(ranks>0)
ranks
View(merged)
ranks <- as.character(merged$V2)
ranks
ranks[ranks==NA]
ranks <- as.numeric(as.character(merged$V2))
ranks
ranks >0
sum(ranks>0)
? sum
sum(ranks>0, na.rm=T)
? order
order(merged)
order(merged$V2)
View(data1)
View(data2)
install.packages("reshape2", lib="C:/Users/Daniela/Documents/R/win-library/3.1")
load(reshape2)
library(reshape2)
melted <- melt(merged,id=c("V1"))
View(melted)
library(data.table)
DT <- data.table(merged)
View(DT)
means <- DT[,lapply(.SD,mean),by="Income.Group"]
View(means)
View(merged)
means <- DT[,mean(V2),by="Income.Group"]
View(means)
DT[na.rm=T]
DT2 <- na.omit(DT)
View(DT2)
? na.omit
DT2 <- na.omit(DT$V2)
merged$V2
merged$V2==""
merged[merged$V2==""] <- rep(NA,length(merged$V2=="")
)
merged[merged$V2==""] <- rep("BU",length(merged$V2==""))
merged[merged$V2!=",]
merged[merged$V2!="",]
d
d
merged[merged$V2!="",]
DT <- data.table(merged[merged$V2!="",])
View(DT)
means <- DT[,mean(V2),by="Income.Group"]
View(means)
means <- DT[,sum(V2),by="Income.Group"]
View(means)
means <- DT[,sum(V2),count(V2),by="Income.Group"]
means <- DT[,sum(V2),by="Income.Group"]
means <- DT[,mean(V2),by="Income.Group"]
View(means)
means <- DT[,mean(V1),by="Income.Group"]
View(means)
means <- DT[,mean(V2),by="Income.Group"]
View(melted)
View(means)
means <- DT[,count(V2),by="Income.Group"]
means <- DT[,mean(V2),by="Income.Group"]
View(means)
DT[Income.Group=="High income: nonOECD",]
DT[Income.Group=="High income: nonOECD",V2]
test <- DT[Income.Group=="High income: nonOECD",V2]
test <- as.numeric(DT[Income.Group=="High income: nonOECD",V2])
mean(test)
test2 <- as.numeric(DT[Income.Group=="High income: OECD",V2])
mean(test2)
test2
test
View(DT)
DT[Income.Group=="High income: OECD",V1]
test <- as.numeric(as.character(DT[Income.Group=="High income: nonOECD",V2]))
test2 <- as.numeric(as.character(DT[Income.Group=="High income: OECD",V2]))
mean(test)
mean(test2)
quantile(DT$V2)
DT[,V2]
as.numeric(as.character(DT[,V2]))
ranks <- as.numeric(as.character(DT[,V2]))
quantile(ranks,probs=c(0.2,0.4,0.6,0.8))
quantile(ranks,probs=c(0.2,0.4,0.6,0.8),na.rm=T)
setkey(DT, V2)
View(DT)
DT <- DT[11:200,]
View(DT)
DT <- DT[,V2=as.numeric(as.character(V2))]
DT <- DT[,V2:=as.numeric(as.character(V2))]
View(DT)
setkey(DT, V2)
View(DT)
DT[1:38,]
DT[1:38,Income.Group]
count(DT[1:38,Income.Group])
count(DT[1:38,Income.Group=="Lower middle income"])
DT[1:38,Income.Group=="Lower middle income"]
sum(DT[1:38,Income.Group=="Lower middle income"])
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileURL,destfile="data_usa.csv")
data <- read.csv("data_usa.csv")
subset <- data[which(data$ACR==3 & data$AGS==6),]
which(data$ACR==3 & data$AGS==6)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(fileURL,destfile="pic.jpg", mode="wb")
library(jpeg)
datapic <- readJPEG("pic.jpg", native = TRUE)
quantile(readJPEG("pic.jpg", native = TRUE),probs=c(0.3,0.8))
DT[by=V2]
DT[V1,by=V2]
quantile(readJPEG("pic.jpg", native = TRUE),probs=c(0.3,0.8))
setwd("~/Coursera/Getting and Cleaning Data/UCI HAR Dataset")
c(1,2)
t(c(1,2))
#Load the variable labels
labels <- readLines("features.txt")
labels <- c("Subject","Activity",labels)
activities <- scan("activity_labels.txt",what="character")
activities <- activities[seq(from=2,to=12,by=2)]
#Load the train data
train_data <- read.table("train/X_train.txt", header=F,sep="")
train_subject <- readLines("train/subject_train.txt")
train_labels <- readLines("train/y_train.txt")
#Substitute numbers with descriptive activity names
for (i in 1:6){
train_labels[train_labels==i] <- rep(activities[i],length(train_labels[train_labels==i]))
}
#Load the test data
test_data <- read.table("test/X_test.txt", header=F,sep="")
test_subject <- readLines("test/subject_test.txt")
test_labels <- readLines("test/y_test.txt")
#Substitute numbers with descriptive activity names
for (i in 1:6){
test_labels[test_labels==i] <- rep(activities[i],length(test_labels[test_labels==i]))
}
#Create label vectors to signify dataset of origin
train_lab <- rep("TRAIN",length(train_subject))
test_lab <- rep("TEST",length(test_subject))
#Load the data into data table
library(data.table)
TRAIN <- data.table(train_subject,train_labels,train_data,train_lab)
TEST <- data.table(test_subject,test_labels,test_data,test_lab)
DATA <- rbind(TRAIN,TEST,use.names=F)
labels <- c("Subject","Activity",labels,"Dataset")
filter <- sort(c(1,2,grep("mean()",labels,fixed=T),grep("std()",labels,fixed=T),566))
DATASET <- DATA[,filter,with=F]
labels <-labels[filter]
View(DATA)
head(data,n=1)
head(DATA,nrow=1)
tail(DATA,nrow=1)
labels <- readLines("features.txt")
labels <- c("Subject","Activity",labels,"Dataset")
filter <- sort(c(1,2,grep("mean()",labels,fixed=T),grep("std()",labels,fixed=T),564))
DATASET <- DATA[,filter,with=F]
labels <-labels[filter]
setkey(DATASET,train_subject,train_labels)
DATASET[,lapply(.SD,mean),by="train_subject,train_labels,train_lab"]
TIDY <- DATASET[,lapply(.SD,mean),by="train_subject,train_labels,train_lab"]
View(TIDY)
setnames(TIDY,labels)
write.table(TIDY, "tidy.txt", sep="\t")
#Remove all created objects from workspace
rm(test_data)
rm(train_data)
rm(DATA)
rm(DATASET)
rm(TRAIN)
rm(TIDY)
rm(TEST)
rm(activities)
rm(filter)
rm(i)
rm(labels)
rm(train_subject)
rm(train_labels)
rm(test_subject)
rm(test_labels)
#Load the tidy data into the workspace
tidy_data <- read.table("tidy.txt", header=T,sep="\t")
View(tidy_data)
rm(train_lab)
rm(test_lab)
source("project.R")
View(DATA)
laebls
labels
setkey(DATASET,train_subject,train_labels)
TIDY <- DATASET[,lapply(.SD,mean),by="train_subject,train_labels,train_lab"]
DATA <- rbind(TRAIN,TEST,use.names=F)
filter <- sort(c(1,2,3,grep("mean()",labels,fixed=T),grep("std()",labels,fixed=T)))
DATASET <- DATA[,filter,with=F]
labels <-labels[filter]
setkey(DATASET,train_subject,train_labels)
TIDY <- DATASET[,lapply(.SD,mean),by="train_subject,train_labels,train_lab"]
names(DATASET)
source("project.R")
View(tidy_data)
